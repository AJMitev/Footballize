@using Footballize.Common
@using Footballize.Models
@using Footballize.Models.Enums
@using Footballize.Web.ViewModels.Shared
@using Microsoft.AspNetCore.Identity
@model Footballize.Web.ViewModels.Gathers.GatherDetailsViewModel
@inject UserManager<User> UserManager
@{
    ViewData["Title"] = "Gather Details";
}

<div id="breadcrumb">
    <nav aria-label="breadcrumb" role="navigation">
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a asp-controller="Home" asp-action="Index">Home</a></li>
            <li class="breadcrumb-item"><a asp-controller="Gathers" asp-action="Index">Gathers</a></li>
            <li class="breadcrumb-item active" aria-current="id">Match Details</li>
        </ol>
    </nav>
</div>
@if (TempData.ContainsKey("Error"))
{
    <div class="text-center">
        <div class="alert text-danger"><strong>Error!</strong> @TempData["Error"]</div>
    </div>
}
<div class="row">
    <div class="col-12">
        <div class="card">
            <div class="card-header card-header-text card-header-primary">
                <div class="card-text">
                    <h4 class="card-title">@Model.Title </h4>
                </div>
            </div>
            <div class="card-body">
                <div class="row">
                    <div class=" col-6">
                        <div>
                            <p class="h5 font-italic description">Status</p>
                            <span class="h4">@Model.Status</span>
                        </div>
                        <hr />
                        @if (!string.IsNullOrEmpty(Model.Description) && !string.IsNullOrWhiteSpace(Model.Description))
                        {
                            <div>
                                <p class="h5 font-italic description">Description</p>
                                <span class="h4">@Model.Description</span>
                            </div>
                            <hr />
                        }
                        <div>
                            <p class="h5 font-italic description">Teams Format</p>
                            <span class="h4">@(EnumHelper<TeamFormat>.GetDisplayValue(@Model.TeamFormat)) </span>
                        </div>
                        <hr />
                        <div>
                            <p class="h5 font-italic description">When?</p>
                            <span class="h4">@Model.StartingAt.ToString("dddd, dd.MM.yyy, HH:mm")</span>
                        </div>
                        <hr />
                        <div>
                            <p class="h5 font-italic description">Where?</p>
                            <a target="_blank" href="https://www.google.com/maps?q=@(Model.Pitch.AddressLocationLatitude.ToString().Replace(',', '.')),@(Model.Pitch.AddressLocationLongitude.ToString().Replace(',', '.'))">
                                <span class="h4">@Model.Pitch.Name, @Model.Pitch.AddressStreet, @Model.Pitch.AddressNumber, @Model.Pitch.TownName, @Model.Pitch.CountryName</span>
                            </a>
                        </div>
                    </div>
                    <div class=" col-6">
                        <div id="map"></div>
                    </div>
                </div>

            </div>
        </div>
    </div>
</div>
<div class="row">
    @if (@Model.Creator.UserName.Equals(User.Identity.Name))
    {
        <div class="col-2 offset-5">
            @if (@Model.Players.Count.Equals(@Model.MaximumPlayers))
            {
                @switch (Model.Status)
                {
                    case GameStatus.Registration:
                        <a asp-controller="Gathers" asp-action="Start" asp-route-id="@Model.Id" class="btn btn-primary btn-round">
                            <i class="material-icons">play_arrow</i> Start Gather
                        </a>
                        break;
                    case GameStatus.Started:
                        <a asp-controller="Gathers" asp-action="Complete" asp-route-id="@Model.Id" class="btn btn-warning btn-round">
                            <i class="material-icons">play_arrow</i> Complete Gather
                        </a>
                        break;
                }

            }
            else
            {
                <a class="btn btn-primary btn-round disabled">
                    <i class="material-icons">play_arrow</i> Start Gather
                </a>
            }
        </div>
    }
    else
    {
        <div class="col-2 offset-5">
            @if (@Model.Players.Any(x => x.Username == User.Identity.Name) && @Model.Status == GameStatus.Registration)
            {
                <a asp-controller="Gathers" asp-action="Leave" asp-route-id="@Model.Id" class="btn btn-danger btn-round">
                    <i class="material-icons">clear</i> Leave Gather
                </a>

            }
            else if (@Model.Players.Count < @Model.MaximumPlayers && @Model.Status == GameStatus.Registration)
            {
                <a asp-controller="Gathers" asp-action="Enroll" asp-route-id="@Model.Id" class="btn btn-primary btn-round">
                    <i class="material-icons">add</i> Enroll Gather
                </a>
            }
        </div>
    }
</div>
<div class="row">
    <div class="col-sm-12 col-md-6 col-lg-6">
        <div class="card">
            <div class="card-body">
                <span class="h5 title text-center">Messaging Room</span>
                <hr />
                <div class="row">
                    <div id="messagesList"></div>
                </div>
                <hr />
                <div class="row">
                    <div class="col-8 align-content-end" id="messageGroup">
                        <div class="input-group">
                            <div class="input-group-prepend">
                                <span class="input-group-text">
                                    <i class="material-icons">email</i>
                                </span>
                            </div>
                            <input type="text" class="form-control" id="messageInput" placeholder="Message...">
                        </div>
                    </div>
                    <div class="col-3 align-content-end">
                        <button id="sendButton" class="btn  btn-primary btn-round">
                            Send
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-sm-12 col-md-6 col-lg-6">
        <div class="card">
            <div class="card-body">
                <span class="h5 title text-center">Players</span>
                <hr />
                <table class="table" id="playersList">
                    <thead>
                        <tr>
                            <th>#</th>
                            <th>Player Title</th>
                            <th>Games Played</th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody>
                        @{
                            int playerInList = 0;

                        }

                        @foreach (var player in @Model.Players)
                        {

                            <tr>
                                <td>@(playerInList += 1)</td>
                                <td>@player.FullName</td>
                                <td>@player.GamesCompleted</td>
                                <td>
                                    <a asp-controller="Users" asp-action="Details" asp-route-id="@player.Id" class="btn btn-primary btn-fab btn-fab-mini btn-round">
                                        <i class="material-icons">person</i>
                                    </a>
                                    @if (player.Username != User.Identity.Name)
                                    {
                                        <a asp-controller="Users" asp-action="Report" asp-route-id="@player.Id" class="btn btn-warning btn-fab btn-fab-mini btn-round">
                                            <i class="material-icons">report</i>
                                        </a>
                                        @if (Model.Creator.UserName.Equals(User.Identity.Name) && Model.Status.Equals(GameStatus.Registration))
                                        {
                                            <a asp-controller="Gathers" asp-action="Kick" asp-route-gatherId="@Model.Id" asp-route-playerId="@player.Id" class="btn btn-danger btn-fab btn-fab-mini btn-round">
                                                <i class="material-icons">block</i>
                                            </a>
                                        }
                                    }
                                </td>
                            </tr>


                        }

                        @for (int i = 0; i < @Math.Abs(@Model.MaximumPlayers - @Model.Players.Count); i++)
                        {
                            <tr>
                                <td>@(playerInList += 1)</td>
                                <td colspan="3"><span class="font-italic text-muted text-center">Empty slot</span></td>

                            </tr>
                        }


                    </tbody>
                </table>
            </div>
        </div>
    </div>
    @if (@Model.Creator.UserName.Equals(User.Identity.Name) || User.IsInRole(GlobalConstants.CanDeleteGathersRoleName))
    {
        <partial name="_DeleteModalPartial" model="@(new DeleteModalPartialViewModel{Id = Model.Id, Title = Model.Title})" />
    }
</div>

@section Scripts
{
    <script>
        var lat = parseFloat('@Html.Raw(Model.Pitch.AddressLocationLatitude).ToString().Replace(',','.')');
        var lng = parseFloat('@Html.Raw(Model.Pitch.AddressLocationLongitude).ToString().Replace(',','.')');

        initMap(lat,lng);
        startChat("@Model.Id");
    </script>
}
